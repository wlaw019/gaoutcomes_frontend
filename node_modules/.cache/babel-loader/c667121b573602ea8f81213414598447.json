{"ast":null,"code":"var _jsxFileName = \"/Users/wincylaw/wlaw019.github.io/gaoutcomes_front/src/App.js\";\nimport React from 'react';\nimport Courses from './components/Courses.js';\nimport FormCourse from './components/FormCourse.js';\nlet baseUrl = '';\n\nif (process.env.NODE_ENV === 'development') {\n  baseUrl = 'http://localhost:3000';\n} else {\n  console.log('this is for heroku');\n}\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleView = (view, courseData) => {\n      let pageTitle = \"\";\n      let formInputs = {\n        course: \"\",\n        cohort: \"\",\n        dategraduated: \"\",\n        id: null\n      };\n\n      switch (view) {\n        case \"home\":\n          pageTitle = \"Overview\";\n          break;\n\n        case \"addCourse\":\n          pageTitle = \"Add a new Course\";\n          break;\n\n        case \"editCourse\":\n          pageTitle = \"Edit Course\";\n          formInputs = {\n            course: courseData.course,\n            cohort: courseData.cohort,\n            dategraduated: courseData.dategraduated,\n            id: courseData.id\n          };\n          break;\n\n        default:\n          break;\n      }\n\n      this.setState({\n        view: {\n          page: view,\n          pageTitle: pageTitle\n        },\n        formInputs: formInputs\n      });\n    };\n\n    this.fetchCourses = () => {\n      fetch(`${baseUrl}/courses`).then(data => data.json()).then(jData => {\n        this.setState({\n          courses: jData\n        });\n      }).catch(err => console.log(err));\n    };\n\n    this.state = {\n      courses: [],\n      view: {\n        page: \"home\",\n        pageTitle: \"Overview\"\n      },\n      formInputs: {\n        course: null,\n        cohort: null,\n        id: null\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.fetchCourses();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"gaOutcomes\")), React.createElement(\"nav\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      onClick: () => {\n        this.handleView(\"home\");\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"Home\"), React.createElement(\"h4\", {\n      onClick: () => {\n        this.handleView(\"addCourse\");\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \"Add Course\"), React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"Analytics\")), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, this.state.view.pageTitle), this.state.view.page === \"home\" ? React.createElement(Courses, {\n      handleView: this.handleView,\n      courses: this.state.courses,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }) : React.createElement(FormCourse, {\n      handleView: this.handleView,\n      view: this.state.view,\n      formInputs: this.state.formInputs,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/wincylaw/wlaw019.github.io/gaoutcomes_front/src/App.js"],"names":["React","Courses","FormCourse","baseUrl","process","env","NODE_ENV","console","log","App","Component","constructor","props","handleView","view","courseData","pageTitle","formInputs","course","cohort","dategraduated","id","setState","page","fetchCourses","fetch","then","data","json","jData","courses","catch","err","state","componentDidMount","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Courses from './components/Courses.js'\nimport FormCourse from './components/FormCourse.js'\n\nlet baseUrl = '';\nif (process.env.NODE_ENV === 'development') {\n  baseUrl = 'http://localhost:3000'\n} else {\n  console.log('this is for heroku');\n}\n\n\nclass App extends React.Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      courses: [],\n      view:{\n        page: \"home\",\n        pageTitle: \"Overview\"\n      },\n      formInputs:{\n        course: null,\n        cohort: null,\n        id: null\n      }\n    }\n  }\n\n\n  handleView = (view, courseData) => {\n    let pageTitle = \"\";\n\n    let formInputs = {\n      course: \"\",\n      cohort: \"\",\n      dategraduated: \"\",\n      id: null\n    }\n\n    switch(view){\n      case \"home\":\n        pageTitle = \"Overview\"\n        break\n      case \"addCourse\":\n        pageTitle = \"Add a new Course\"\n        break\n      case \"editCourse\":\n        pageTitle = \"Edit Course\"\n        formInputs = {\n          course: courseData.course,\n          cohort: courseData.cohort,\n          dategraduated: courseData.dategraduated,\n          id: courseData.id\n        }\n        break\n      default:\n      break\n    }\n\n    this.setState({\n      view: {page: view, pageTitle: pageTitle},\n      formInputs: formInputs\n    })\n  }\n\n\n    fetchCourses = () => {\n      fetch(`${baseUrl}/courses`)\n      .then(data=>data.json())\n      .then(jData=> {\n        this.setState({courses:jData})\n      }).catch(err=>console.log(err))\n    }\n\n\n    componentDidMount(){\n      this.fetchCourses()\n    }\n\n\n  render(){\n    return(\n      <div className=\"container\">\n        <header>\n          <h1>gaOutcomes</h1>\n\n        </header>\n        <nav>\n          <h4 onClick={() => {this.handleView(\"home\")}}>Home</h4>\n          <h4 onClick={() => {this.handleView(\"addCourse\")}}>Add Course</h4>\n          <h4>Analytics</h4>\n        </nav>\n\n        <h2>{this.state.view.pageTitle}</h2>\n        {this.state.view.page === \"home\"?\n        <Courses handleView={this.handleView} courses={this.state.courses}/>\n        :<FormCourse handleView={this.handleView} view={this.state.view} formInputs={this.state.formInputs}/>}\n\n      </div>\n    )\n  }\n\n\n\n\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}