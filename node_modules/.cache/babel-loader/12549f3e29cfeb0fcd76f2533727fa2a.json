{"ast":null,"code":"var _jsxFileName = \"/Users/wincylaw/wlaw019.github.io/gaoutcomes_front/src/App.js\";\nimport React from 'react';\nimport Courses from './components/Courses.js';\nimport FormCourse from './components/FormCourse.js';\nimport Students from './components/Students.js'; // ========================\n// URL for psql database\n// ========================\n\nlet baseUrl = '';\n\nif (process.env.NODE_ENV === 'development') {\n  baseUrl = 'http://localhost:3000';\n} else {\n  console.log('this is for heroku');\n}\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleView = (view, data) => {\n      let pageTitle = \"\";\n      let formInputs = {\n        course: \"\",\n        cohort: \"\",\n        dategraduated: \"\",\n        id: null\n      };\n      let formInputsStudents = {\n        name: \"\",\n        course: \"\",\n        cohort: \"\",\n        dateoffer: \"\",\n        id: null\n      };\n\n      switch (view) {\n        case \"home\":\n          pageTitle = \"Overview\";\n          break;\n\n        case \"addCourse\":\n          pageTitle = \"Add a new Course\";\n          break;\n\n        case \"editCourse\":\n          pageTitle = \"Edit Course\";\n          formInputs = {\n            course: data.course,\n            cohort: data.cohort,\n            dategraduated: new Date(data.dategraduated).toISOString().split('T')[0],\n            id: data.id\n          };\n          break;\n\n        case \"students\":\n          pageTitle = \"Class\";\n          formInputsStudents = {\n            name: data.name,\n            course: data.course,\n            cohort: data.cohort,\n            dateoffer: new Date(data.dateoffer).toISOString().split('T')[0],\n            id: data.id\n          };\n          break;\n\n        default:\n          break;\n      }\n\n      this.setState({\n        view: {\n          page: view,\n          pageTitle: pageTitle\n        },\n        formInputs: formInputs,\n        formInputsStudents: formInputsStudents\n      });\n    };\n\n    this.handleCreate = createData => {\n      fetch(`${baseUrl}/courses`, {\n        body: JSON.stringify(createData),\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json, text/plain, */*',\n          'Content-Type': 'application/json'\n        }\n      }).then(createdCourse => {\n        this.handleView('home');\n        this.fetchCourses();\n      }).catch(err => console.log(err));\n    };\n\n    this.handleUpdate = updateData => {\n      fetch(`${baseUrl}/courses/${updateData.id}`, {\n        body: JSON.stringify(updateData),\n        method: 'PUT',\n        headers: {\n          'Accept': 'application/json, text/plain, */*',\n          'Content-Type': 'application/json'\n        }\n      }).then(updatedCourse => {\n        this.handleView('home');\n        this.fetchCourses();\n      }).catch(err => console.log(err));\n    };\n\n    this.handleDelete = id => {\n      fetch(`${baseUrl}/courses/${id}`, {\n        method: 'DELETE',\n        headers: {\n          'Accept': 'application/json, text/plain, */*',\n          'Content-Type': 'application/json'\n        }\n      }).then(json => {\n        this.setState({\n          courses: this.state.courses.filter(course => course.id !== id)\n        });\n      }).catch(err => console.log(err));\n    };\n\n    this.handleStudents = course_id => {\n      fetch(`${baseUrl}/students`).then(data => data.json().filter(course => course.course_id === course_id)).then(jData => {\n        this.setState({\n          students: jData\n        });\n      }).catch(err => console.log(err)).then(() => {\n        this.handleView(\"students\");\n      });\n    };\n\n    this.fetchCourses = () => {\n      fetch(`${baseUrl}/courses`).then(data => data.json()).then(jData => {\n        this.setState({\n          courses: jData\n        });\n      }).catch(err => console.log(err));\n    };\n\n    this.state = {\n      courses: [],\n      students: [],\n      view: {\n        page: \"home\",\n        pageTitle: \"Overview\"\n      },\n      formInputs: {\n        course: null,\n        cohort: null,\n        dategraduated: null,\n        id: null\n      },\n      formInputsStudents: {\n        name: null,\n        course: null,\n        cohort: null,\n        dateoffer: null,\n        id: null\n      }\n    };\n  } // ========================\n  // Handlers\n  // ========================\n\n\n  componentDidMount() {\n    this.fetchCourses();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, \"gaOutcomes\")), React.createElement(\"nav\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      onClick: () => {\n        this.handleView(\"home\");\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, \"Home\"), React.createElement(\"h4\", {\n      onClick: () => {\n        this.handleView(\"addCourse\");\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, \"Add Course\"), React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, \"Analytics\")), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, this.state.view.pageTitle), this.state.view.page === \"home\" ? React.createElement(Courses, {\n      handleView: this.handleView,\n      handleDelete: this.handleDelete,\n      courses: this.state.courses,\n      handleStudents: this.handleStudents,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }) : null, this.state.view.page === \"addCourse\" || this.state.view.page === \"editCourse\" ? React.createElement(FormCourse, {\n      handleView: this.handleView,\n      handleCreate: this.handleCreate,\n      handleUpdate: this.handleUpdate,\n      view: this.state.view,\n      formInputs: this.state.formInputs,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }) : null, this.state.view.page === \"students\" ? React.createElement(Courses, {\n      handleView: this.handleView,\n      handleDelete: this.handleDelete,\n      courses: this.state.courses,\n      handleStudents: this.handleStudents,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }) : null);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/wincylaw/wlaw019.github.io/gaoutcomes_front/src/App.js"],"names":["React","Courses","FormCourse","Students","baseUrl","process","env","NODE_ENV","console","log","App","Component","constructor","props","handleView","view","data","pageTitle","formInputs","course","cohort","dategraduated","id","formInputsStudents","name","dateoffer","Date","toISOString","split","setState","page","handleCreate","createData","fetch","body","JSON","stringify","method","headers","then","createdCourse","fetchCourses","catch","err","handleUpdate","updateData","updatedCourse","handleDelete","json","courses","state","filter","handleStudents","course_id","jData","students","componentDidMount","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Courses from './components/Courses.js'\nimport FormCourse from './components/FormCourse.js'\nimport Students from './components/Students.js'\n\n// ========================\n// URL for psql database\n// ========================\nlet baseUrl = '';\nif (process.env.NODE_ENV === 'development') {\n  baseUrl = 'http://localhost:3000'\n} else {\n  console.log('this is for heroku');\n}\n\n\nclass App extends React.Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      courses: [],\n      students: [],\n      view:{\n        page: \"home\",\n        pageTitle: \"Overview\"\n      },\n      formInputs:{\n        course: null,\n        cohort: null,\n        dategraduated: null,\n        id: null\n      },\n      formInputsStudents:{\n        name: null,\n        course: null,\n        cohort: null,\n        dateoffer: null,\n        id: null\n      }\n    }\n  }\n\n// ========================\n// Handlers\n// ========================\n  handleView = (view, data) => {\n    let pageTitle = \"\";\n\n    let formInputs = {\n      course: \"\",\n      cohort: \"\",\n      dategraduated: \"\",\n      id: null\n    }\n\n    let formInputsStudents = {\n      name: \"\",\n      course: \"\",\n      cohort: \"\",\n      dateoffer: \"\",\n      id: null\n      }\n\n    switch(view){\n      case \"home\":\n        pageTitle = \"Overview\"\n        break\n      case \"addCourse\":\n        pageTitle = \"Add a new Course\"\n        break\n      case \"editCourse\":\n        pageTitle = \"Edit Course\"\n        formInputs = {\n          course: data.course,\n          cohort: data.cohort,\n          dategraduated: new Date(data.dategraduated).toISOString().split('T')[0],\n          id: data.id\n        }\n        break\n      case \"students\":\n        pageTitle = \"Class\"\n        formInputsStudents = {\n          name: data.name,\n          course: data.course,\n          cohort: data.cohort,\n          dateoffer: new Date(data.dateoffer).toISOString().split('T')[0],\n          id: data.id\n          }\n          break\n      default:\n      break\n    }\n\n    this.setState({\n      view: {page: view, pageTitle: pageTitle},\n      formInputs: formInputs,\n      formInputsStudents: formInputsStudents\n    })\n  }\n\n\n  handleCreate = (createData) => {\n    fetch(`${baseUrl}/courses`, {\n      body: JSON.stringify(createData),\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json, text/plain, */*',\n        'Content-Type': 'application/json'\n      }\n    }).then(createdCourse => {\n        this.handleView('home')\n        this.fetchCourses()\n      }).catch(err => console.log(err))\n  }\n\n\n  handleUpdate = (updateData) => {\n    fetch(`${baseUrl}/courses/${updateData.id}`, {\n      body: JSON.stringify(updateData),\n      method: 'PUT',\n      headers: {\n        'Accept': 'application/json, text/plain, */*',\n        'Content-Type': 'application/json'\n      }\n    }).then(updatedCourse => {\n        this.handleView('home')\n        this.fetchCourses()\n      }).catch(err => console.log(err))\n  }\n\n\n  handleDelete = (id) => {\n    fetch(`${baseUrl}/courses/${id}`, {\n      method: 'DELETE',\n      headers: {\n        'Accept': 'application/json, text/plain, */*',\n        'Content-Type': 'application/json'\n      }\n    }).then(json => {\n        this.setState({\n          courses: this.state.courses.filter(course => course.id !== id)\n        })\n      }).catch(err => console.log(err))\n  }\n\n\n  handleStudents = (course_id) => {\n\n    fetch(`${baseUrl}/students`)\n    .then(data=>data.json().filter(course => course.course_id === course_id))\n    .then(jData=> {\n      this.setState({students:jData})\n    }).catch(err=>console.log(err))\n    .then(() => {\n      this.handleView(\"students\")\n    })\n  }\n\n// ========================\n// Run fetchCourses after page  loads\n// ========================\n    fetchCourses = () => {\n      fetch(`${baseUrl}/courses`)\n      .then(data=>data.json())\n      .then(jData=> {\n        this.setState({courses:jData})\n      }).catch(err=>console.log(err))\n    }\n\n\n    componentDidMount(){\n      this.fetchCourses()\n    }\n\n\n  render(){\n    return(\n      <div className=\"container\">\n        <header>\n          <h1>gaOutcomes</h1>\n\n        </header>\n        <nav>\n          <h4 onClick={() => {this.handleView(\"home\")}}>Home</h4>\n          <h4 onClick={() => {this.handleView(\"addCourse\")}}>Add Course</h4>\n          <h4>Analytics</h4>\n        </nav>\n\n        <h2>{this.state.view.pageTitle}</h2>\n        {this.state.view.page === \"home\"?\n        <Courses handleView={this.handleView} handleDelete={this.handleDelete} courses={this.state.courses} handleStudents={this.handleStudents} /> : null}\n\n        {this.state.view.page === \"addCourse\"||this.state.view.page === \"editCourse\"?\n        <FormCourse handleView={this.handleView} handleCreate={this.handleCreate} handleUpdate={this.handleUpdate} view={this.state.view} formInputs={this.state.formInputs} />\n        : null}\n\n        {this.state.view.page === \"students\"?\n        <Courses handleView={this.handleView} handleDelete={this.handleDelete} courses={this.state.courses} handleStudents={this.handleStudents} /> : null}\n\n\n\n\n      </div>\n    )\n  }\n\n\n\n\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}