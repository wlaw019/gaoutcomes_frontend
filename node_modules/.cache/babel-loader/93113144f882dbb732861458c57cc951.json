{"ast":null,"code":"var _jsxFileName = \"/Users/wincylaw/wlaw019.github.io/gaoutcomes_front/src/App.js\";\nimport React from 'react';\nimport Courses from './components/Courses.js';\nimport FormCourse from './components/FormCourse.js';\nimport Students from './components/Students.js';\nimport FormStudent from './components/FormStudent.js'; // ========================\n// URL for psql database\n// ========================\n\nlet baseUrl = '';\n\nif (process.env.NODE_ENV === 'development') {\n  baseUrl = 'http://localhost:3000';\n} else {\n  console.log('this is for heroku');\n}\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleView = (view, data) => {\n      let pageTitle = \"\";\n      let formInputs = {\n        course: \"\",\n        cohort: \"\",\n        dategraduated: \"\",\n        id: null\n      };\n      let formInputsStudent = {\n        name: \"\",\n        course_id: \"\",\n        dateoffer: \"\",\n        id: null\n      };\n\n      switch (view) {\n        case \"home\":\n          pageTitle = \"Course Overview\";\n          break;\n\n        case \"addCourse\":\n          pageTitle = \"Add a new Course\";\n          break;\n\n        case \"editCourse\":\n          pageTitle = \"Edit Course\";\n          formInputs = {\n            course: data.course,\n            cohort: data.cohort,\n            dategraduated: new Date(data.dategraduated).toISOString().split('T')[0],\n            id: data.id\n          };\n          break;\n\n        case \"students\":\n          pageTitle = \"Class Overview\";\n          formInputsStudent = {\n            name: \"\",\n            course_id: data,\n            dateoffer: \"\",\n            id: \"\"\n          };\n          this.setState({\n            formInputsStudent: formInputsStudent\n          });\n          break;\n\n        case \"addStudent\":\n          pageTitle = \"Aa a new Student\"; // formInputsStudent = {\n          //   name: data.name,\n          //   course_id: data.course_id,\n          //   dateoffer: new Date(data.dateoffer).toISOString().split('T')[0],\n          //   id: data.id\n          // }\n\n          break;\n\n        default:\n          break;\n      }\n\n      this.setState({\n        view: {\n          page: view,\n          pageTitle: pageTitle\n        },\n        formInputs: formInputs\n      });\n    };\n\n    this.handleCreate = createData => {\n      let finalUrl = \"\";\n\n      if (this.state.view.page === \"addCourse\") {\n        finalUrl = `${baseUrl}/courses`;\n      } else if (this.state.view.page === \"addStudent\") {\n        finalUrl = `${baseUrl}/students`;\n      }\n\n      fetch(finalUrl, {\n        body: JSON.stringify(createData),\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json, text/plain, */*',\n          'Content-Type': 'application/json'\n        }\n      }).then(createdCourse => {\n        this.handleView('home');\n        this.fetchCourses();\n      }).catch(err => console.log(err));\n    };\n\n    this.handleUpdate = updateData => {\n      fetch(`${baseUrl}/courses/${updateData.id}`, {\n        body: JSON.stringify(updateData),\n        method: 'PUT',\n        headers: {\n          'Accept': 'application/json, text/plain, */*',\n          'Content-Type': 'application/json'\n        }\n      }).then(updatedCourse => {\n        this.handleView('home');\n        this.fetchCourses();\n      }).catch(err => console.log(err));\n    };\n\n    this.handleDelete = id => {\n      fetch(`${baseUrl}/courses/${id}`, {\n        method: 'DELETE',\n        headers: {\n          'Accept': 'application/json, text/plain, */*',\n          'Content-Type': 'application/json'\n        }\n      }).then(json => {\n        this.setState({\n          courses: this.state.courses.filter(course => course.id !== id)\n        });\n      }).catch(err => console.log(err));\n    };\n\n    this.handleStudents = course_id => {\n      fetch(`${baseUrl}/students`).then(data => data.json()).then(jData => {\n        this.setState({\n          students: jData.filter(course => course.course_id === course_id)\n        });\n      }).catch(err => console.log(err)).then(() => {\n        this.handleView(\"students\", course_id);\n      });\n    };\n\n    this.fetchCourses = () => {\n      fetch(`${baseUrl}/courses`).then(data => data.json()).then(jData => {\n        this.setState({\n          courses: jData\n        });\n      }).catch(err => console.log(err));\n    };\n\n    this.state = {\n      courses: [],\n      students: [],\n      view: {\n        page: \"home\",\n        pageTitle: \"Course Overview\"\n      },\n      formInputs: {\n        course: null,\n        cohort: null,\n        dategraduated: null,\n        id: null\n      },\n      formInputsStudent: {\n        name: null,\n        course_id: null,\n        dateoffer: null,\n        id: null\n      }\n    };\n  } // ========================\n  // Handlers\n  // ========================\n\n\n  componentDidMount() {\n    this.fetchCourses();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, \"gaOutcomes\")), React.createElement(\"nav\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      onClick: () => {\n        this.handleView(\"home\");\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }, \"Home\"), this.state.view.page === \"home\" ? React.createElement(\"h4\", {\n      onClick: () => {\n        this.handleView(\"addCourse\");\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }, \"Add Course\") : null, this.state.view.page === \"students\" ? React.createElement(\"h4\", {\n      onClick: () => {\n        this.handleView(\"addStudent\");\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }, \"Add Student\") : null, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }, \"Analytics\")), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }, this.state.view.pageTitle), this.state.view.page === \"home\" ? React.createElement(Courses, {\n      handleView: this.handleView,\n      handleDelete: this.handleDelete,\n      courses: this.state.courses,\n      handleStudents: this.handleStudents,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }) : null, this.state.view.page === \"addCourse\" || this.state.view.page === \"editCourse\" ? React.createElement(FormCourse, {\n      handleCreate: this.handleCreate,\n      handleUpdate: this.handleUpdate,\n      view: this.state.view,\n      formInputs: this.state.formInputs,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }) : null, this.state.view.page === \"students\" ? React.createElement(Students, {\n      students: this.state.students,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221\n      },\n      __self: this\n    }) : null, this.state.view.page === \"addStudent\" || this.state.view.page === \"editStudent\" ? React.createElement(FormStudent, {\n      handleCreate: this.handleCreate,\n      handleUpdate: this.handleUpdate,\n      view: this.state.view,\n      formInputsStudent: this.state.formInputsStudent,\n      students: this.state.students,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }) : null);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/wincylaw/wlaw019.github.io/gaoutcomes_front/src/App.js"],"names":["React","Courses","FormCourse","Students","FormStudent","baseUrl","process","env","NODE_ENV","console","log","App","Component","constructor","props","handleView","view","data","pageTitle","formInputs","course","cohort","dategraduated","id","formInputsStudent","name","course_id","dateoffer","Date","toISOString","split","setState","page","handleCreate","createData","finalUrl","state","fetch","body","JSON","stringify","method","headers","then","createdCourse","fetchCourses","catch","err","handleUpdate","updateData","updatedCourse","handleDelete","json","courses","filter","handleStudents","jData","students","componentDidMount","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Courses from './components/Courses.js'\nimport FormCourse from './components/FormCourse.js'\nimport Students from './components/Students.js'\nimport FormStudent from './components/FormStudent.js'\n\n// ========================\n// URL for psql database\n// ========================\nlet baseUrl = '';\nif (process.env.NODE_ENV === 'development') {\n  baseUrl = 'http://localhost:3000'\n} else {\n  console.log('this is for heroku');\n}\n\n\nclass App extends React.Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      courses: [],\n      students: [],\n      view:{\n        page: \"home\",\n        pageTitle: \"Course Overview\"\n      },\n      formInputs:{\n        course: null,\n        cohort: null,\n        dategraduated: null,\n        id: null\n      },\n      formInputsStudent:{\n        name: null,\n        course_id: null,\n        dateoffer: null,\n        id: null\n      }\n    }\n  }\n\n// ========================\n// Handlers\n// ========================\n  handleView = (view, data) => {\n    let pageTitle = \"\";\n\n    let formInputs = {\n      course: \"\",\n      cohort: \"\",\n      dategraduated: \"\",\n      id: null\n    }\n\n    let formInputsStudent = {\n      name: \"\",\n      course_id: \"\",\n      dateoffer: \"\",\n      id: null\n    }\n\n    switch(view){\n      case \"home\":\n        pageTitle = \"Course Overview\"\n        break\n      case \"addCourse\":\n        pageTitle = \"Add a new Course\"\n        break\n      case \"editCourse\":\n        pageTitle = \"Edit Course\"\n        formInputs = {\n          course: data.course,\n          cohort: data.cohort,\n          dategraduated: new Date(data.dategraduated).toISOString().split('T')[0],\n          id: data.id\n        }\n        break\n      case \"students\":\n        pageTitle = \"Class Overview\"\n        formInputsStudent = {\n          name: \"\",\n          course_id: data,\n          dateoffer: \"\",\n          id: \"\"\n        }\n\n        this.setState({\n          formInputsStudent: formInputsStudent\n        })\n        break\n      case \"addStudent\":\n        pageTitle = \"Aa a new Student\"\n        // formInputsStudent = {\n        //   name: data.name,\n        //   course_id: data.course_id,\n        //   dateoffer: new Date(data.dateoffer).toISOString().split('T')[0],\n        //   id: data.id\n        // }\n        break\n      default:\n        break\n    }\n\n    this.setState({\n      view: {page: view, pageTitle: pageTitle},\n      formInputs: formInputs\n    })\n  }\n\n\n  handleCreate = (createData) => {\n    let finalUrl = \"\";\n    \n    if (this.state.view.page===\"addCourse\") {\n      finalUrl = `${baseUrl}/courses`;\n    } else if (this.state.view.page===\"addStudent\") {\n      finalUrl = `${baseUrl}/students`;\n    }\n\n    fetch(finalUrl, {\n      body: JSON.stringify(createData),\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json, text/plain, */*',\n        'Content-Type': 'application/json'\n      }\n    }).then(createdCourse => {\n        this.handleView('home')\n        this.fetchCourses()\n      }).catch(err => console.log(err))\n  }\n\n\n  handleUpdate = (updateData) => {\n    fetch(`${baseUrl}/courses/${updateData.id}`, {\n      body: JSON.stringify(updateData),\n      method: 'PUT',\n      headers: {\n        'Accept': 'application/json, text/plain, */*',\n        'Content-Type': 'application/json'\n      }\n    }).then(updatedCourse => {\n        this.handleView('home')\n        this.fetchCourses()\n      }).catch(err => console.log(err))\n  }\n\n\n  handleDelete = (id) => {\n    fetch(`${baseUrl}/courses/${id}`, {\n      method: 'DELETE',\n      headers: {\n        'Accept': 'application/json, text/plain, */*',\n        'Content-Type': 'application/json'\n      }\n    }).then(json => {\n        this.setState({\n          courses: this.state.courses.filter(course => course.id !== id)\n        })\n      }).catch(err => console.log(err))\n  }\n\n\n  handleStudents = (course_id) => {\n\n    fetch(`${baseUrl}/students`)\n    .then(data=>data.json())\n    .then(jData=> {\n      this.setState({\n        students:jData.filter(course => course.course_id === course_id)\n      })\n    }).catch(err=>console.log(err))\n    .then(() => {\n      this.handleView(\"students\", course_id)\n    })\n  }\n\n// ========================\n// Run fetchCourses after page  loads\n// ========================\n    fetchCourses = () => {\n      fetch(`${baseUrl}/courses`)\n      .then(data=>data.json())\n      .then(jData=> {\n        this.setState({courses:jData})\n      }).catch(err=>console.log(err))\n    }\n\n\n    componentDidMount(){\n      this.fetchCourses()\n    }\n\n\n  render(){\n    return(\n      <div className=\"container\">\n        <header>\n          <h1>gaOutcomes</h1>\n\n        </header>\n        <nav>\n          <h4 onClick={() => {this.handleView(\"home\")}}>Home</h4>\n          {this.state.view.page === \"home\"?\n          <h4 onClick={() => {this.handleView(\"addCourse\")}}>Add Course</h4> : null}\n          {this.state.view.page === \"students\"?\n          <h4 onClick={() => {this.handleView(\"addStudent\")}}>Add Student</h4> : null}\n          <h4>Analytics</h4>\n        </nav>\n\n        <h2>{this.state.view.pageTitle}</h2>\n        {this.state.view.page === \"home\"?\n        <Courses handleView={this.handleView} handleDelete={this.handleDelete} courses={this.state.courses} handleStudents={this.handleStudents} /> : null}\n\n        {this.state.view.page === \"addCourse\"||this.state.view.page === \"editCourse\"?\n        <FormCourse handleCreate={this.handleCreate} handleUpdate={this.handleUpdate} view={this.state.view} formInputs={this.state.formInputs} />\n        : null}\n\n        {this.state.view.page === \"students\"?\n        <Students students={this.state.students} /> : null}\n\n        {this.state.view.page === \"addStudent\"||this.state.view.page === \"editStudent\"?\n        <FormStudent handleCreate={this.handleCreate} handleUpdate={this.handleUpdate} view={this.state.view} formInputsStudent={this.state.formInputsStudent} students={this.state.students} />\n        : null}\n\n\n\n\n      </div>\n    )\n  }\n\n\n\n\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}