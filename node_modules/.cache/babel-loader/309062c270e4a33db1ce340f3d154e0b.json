{"ast":null,"code":"var _jsxFileName = \"/Users/wincylaw/wlaw019.github.io/gaoutcomes_front/src/components/Analytics.js\";\nimport React from 'react';\nimport Chart from \"chart.js\";\n\nclass Analytics extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.chartRef = React.createRef();\n  }\n\n  componentDidUpdate() {\n    const myChartRef = this.chartRef.current.getContext(\"2d\");\n    new Chart(myChartRef, {\n      type: \"line\",\n      data: {\n        //Bring in data\n        labels: this.props.daysArrayIndex,\n        datasets: [{\n          label: \"Search Time (Days)\",\n          data: this.props.daysArray\n        }]\n      },\n      options: {\n        legend: {\n          display: false\n        },\n        scales: {\n          yAxes: [{\n            scaleLabel: {\n              display: true,\n              labelString: 'Search Time (Days)'\n            },\n            ticks: {\n              beginAtZero: true\n            }\n          }],\n          xAxes: [{\n            scaleLabel: {\n              display: true,\n              labelString: 'Student'\n            }\n          }]\n        }\n      }\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"chart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(\"canvas\", {\n      id: \"myChart\",\n      ref: this.chartRef,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Analytics;","map":{"version":3,"sources":["/Users/wincylaw/wlaw019.github.io/gaoutcomes_front/src/components/Analytics.js"],"names":["React","Chart","Analytics","Component","chartRef","createRef","componentDidUpdate","myChartRef","current","getContext","type","data","labels","props","daysArrayIndex","datasets","label","daysArray","options","legend","display","scales","yAxes","scaleLabel","labelString","ticks","beginAtZero","xAxes","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,UAAlB;;AAGA,MAAMC,SAAN,SAAwBF,KAAK,CAACG,SAA9B,CAAwC;AAAA;AAAA;AAAA,SAEpCC,QAFoC,GAEzBJ,KAAK,CAACK,SAAN,EAFyB;AAAA;;AAIpCC,EAAAA,kBAAkB,GAAG;AACjB,UAAMC,UAAU,GAAG,KAAKH,QAAL,CAAcI,OAAd,CAAsBC,UAAtB,CAAiC,IAAjC,CAAnB;AAEA,QAAIR,KAAJ,CAAUM,UAAV,EAAsB;AAClBG,MAAAA,IAAI,EAAE,MADY;AAElBC,MAAAA,IAAI,EAAE;AACF;AACAC,QAAAA,MAAM,EAAE,KAAKC,KAAL,CAAWC,cAFjB;AAGFC,QAAAA,QAAQ,EAAE,CACN;AACIC,UAAAA,KAAK,EAAE,oBADX;AAEIL,UAAAA,IAAI,EAAE,KAAKE,KAAL,CAAWI;AAFrB,SADM;AAHR,OAFY;AAYlBC,MAAAA,OAAO,EAAE;AACPC,QAAAA,MAAM,EAAC;AAACC,UAAAA,OAAO,EAAC;AAAT,SADA;AAEPC,QAAAA,MAAM,EAAE;AACNC,UAAAA,KAAK,EAAE,CAAC;AACNC,YAAAA,UAAU,EAAE;AAACH,cAAAA,OAAO,EAAE,IAAV;AAAgBI,cAAAA,WAAW,EAAE;AAA7B,aADN;AAENC,YAAAA,KAAK,EAAE;AAACC,cAAAA,WAAW,EAAE;AAAd;AAFD,WAAD,CADD;AAKNC,UAAAA,KAAK,EAAE,CAAC;AACNJ,YAAAA,UAAU,EAAE;AAACH,cAAAA,OAAO,EAAE,IAAV;AAAgBI,cAAAA,WAAW,EAAE;AAA7B;AADN,WAAD;AALD;AAFD;AAZS,KAAtB;AAyBH;;AACDI,EAAAA,MAAM,GAAG;AACL,WACI;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AACI,MAAA,EAAE,EAAC,SADP;AAEI,MAAA,GAAG,EAAE,KAAKxB,QAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ;AAQH;;AA1CmC;;AA6CxC,eAAeF,SAAf","sourcesContent":["import React from 'react';\nimport Chart from \"chart.js\";\n\n\nclass Analytics extends React.Component {\n\n    chartRef = React.createRef();\n\n    componentDidUpdate() {\n        const myChartRef = this.chartRef.current.getContext(\"2d\");\n\n        new Chart(myChartRef, {\n            type: \"line\",\n            data: {\n                //Bring in data\n                labels: this.props.daysArrayIndex,\n                datasets: [\n                    {\n                        label: \"Search Time (Days)\",\n                        data: this.props.daysArray,\n                    }\n                ]\n            },\n            options: {\n              legend:{display:false},\n              scales: {\n                yAxes: [{\n                  scaleLabel: {display: true, labelString: 'Search Time (Days)'},\n                  ticks: {beginAtZero: true}\n                }],\n                xAxes: [{\n                  scaleLabel: {display: true, labelString: 'Student'}\n                }]\n              }\n            }\n        });\n    }\n    render() {\n        return (\n            <div className=\"chart\">\n                <canvas\n                    id=\"myChart\"\n                    ref={this.chartRef}\n                />\n            </div>\n        )\n    }\n}\n\nexport default Analytics\n"]},"metadata":{},"sourceType":"module"}